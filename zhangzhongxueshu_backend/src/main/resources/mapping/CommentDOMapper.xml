<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.CommentDOMapper">
  <resultMap id="BaseResultMap" type="org.example.dataobj.CommentDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="articleid" jdbcType="VARCHAR" property="articleid" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.dataobj.CommentDO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, articleid, time, email
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getCommentByArticleid"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where articleid = #{articleid}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.example.dataobj.CommentDO">
    insert into comment (id, articleid, time, 
      email, content)
    values (#{id,jdbcType=INTEGER}, #{articleid,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.dataobj.CommentDO">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleid != null">
        articleid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.dataobj.CommentDO">
    update comment
    <set>
      <if test="articleid != null">
        articleid = #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.dataobj.CommentDO">
    update comment
    set articleid = #{articleid,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.dataobj.CommentDO">
    update comment
    set articleid = #{articleid,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>